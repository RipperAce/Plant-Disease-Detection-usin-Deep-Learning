# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.

"""
from google.colab import drive
drive.mount('/content/drive')


from keras.models import Sequential
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense

#create classifier 
classifier = Sequential()

#adding convolution layer
classifier.add(Convolution2D(32, 3, 3, input_shape = (256, 256, 3), activation = 'relu'))

#adding pooling layer
classifier.add(MaxPooling2D(pool_size = (2,2)))#, stride = (2,2)))

#2nd layer
classifier.add(Convolution2D(64, 3, 3, activation = 'relu'))
classifier.add(MaxPooling2D(pool_size = (2,2)))#, stride = (2,2)))

#3rd layer
classifier.add(Convolution2D(128, 3, 3, activation = 'relu'))
classifier.add(MaxPooling2D(pool_size = (2,2)))#, stride = (2,2)))

#4th layer
classifier.add(Convolution2D(512, 3, 3, activation = 'relu'))
classifier.add(MaxPooling2D(pool_size = (2,2)))#, stride = (2,2)))
#flattening
classifier.add(Flatten())

#Fully Connected layer
classifier.add(Dense(output_dim = 128,activation = 'relu'))
classifier.add(Dense(output_dim = 4, activation = 'softmax'))

#compiling
classifier.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])


#making Image size same
from keras.preprocessing.image import ImageDataGenerator
train_datagen = ImageDataGenerator(
        rescale=1./255,
        shear_range=0.2,
        zoom_range=0.2,
        horizontal_flip=True)

test_datagen = ImageDataGenerator(rescale=1./255)

training_set = train_datagen.flow_from_directory(
        'drive/My Drive/dataset/train',
        target_size=(256, 256),
        batch_size=32,
        class_mode='categorical')

test_set = test_datagen.flow_from_directory(
        'drive/My Drive/dataset/test',
        target_size=(256, 256),
        batch_size=32,
        class_mode='categorical')

classifier.fit_generator( training_set,
                          steps_per_epoch=2041,
                          epochs=25,
                          validation_data=test_set,
                          validation_steps=505)